/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const GuestbookLazyImport = createFileRoute('/guestbook')()
const CraftLazyImport = createFileRoute('/craft')()
const ContactLazyImport = createFileRoute('/contact')()
const BlogLazyImport = createFileRoute('/blog')()
const IndexLazyImport = createFileRoute('/')()
const ToolsGradientGeneratorLazyImport = createFileRoute(
  '/tools/gradient-generator',
)()

// Create/Update Routes

const GuestbookLazyRoute = GuestbookLazyImport.update({
  id: '/guestbook',
  path: '/guestbook',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/guestbook.lazy').then((d) => d.Route))

const CraftLazyRoute = CraftLazyImport.update({
  id: '/craft',
  path: '/craft',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/craft.lazy').then((d) => d.Route))

const ContactLazyRoute = ContactLazyImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const BlogLazyRoute = BlogLazyImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ToolsGradientGeneratorLazyRoute = ToolsGradientGeneratorLazyImport.update(
  {
    id: '/tools/gradient-generator',
    path: '/tools/gradient-generator',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/tools/gradient-generator.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/craft': {
      id: '/craft'
      path: '/craft'
      fullPath: '/craft'
      preLoaderRoute: typeof CraftLazyImport
      parentRoute: typeof rootRoute
    }
    '/guestbook': {
      id: '/guestbook'
      path: '/guestbook'
      fullPath: '/guestbook'
      preLoaderRoute: typeof GuestbookLazyImport
      parentRoute: typeof rootRoute
    }
    '/tools/gradient-generator': {
      id: '/tools/gradient-generator'
      path: '/tools/gradient-generator'
      fullPath: '/tools/gradient-generator'
      preLoaderRoute: typeof ToolsGradientGeneratorLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/blog': typeof BlogLazyRoute
  '/contact': typeof ContactLazyRoute
  '/craft': typeof CraftLazyRoute
  '/guestbook': typeof GuestbookLazyRoute
  '/tools/gradient-generator': typeof ToolsGradientGeneratorLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/blog': typeof BlogLazyRoute
  '/contact': typeof ContactLazyRoute
  '/craft': typeof CraftLazyRoute
  '/guestbook': typeof GuestbookLazyRoute
  '/tools/gradient-generator': typeof ToolsGradientGeneratorLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/blog': typeof BlogLazyRoute
  '/contact': typeof ContactLazyRoute
  '/craft': typeof CraftLazyRoute
  '/guestbook': typeof GuestbookLazyRoute
  '/tools/gradient-generator': typeof ToolsGradientGeneratorLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog'
    | '/contact'
    | '/craft'
    | '/guestbook'
    | '/tools/gradient-generator'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog'
    | '/contact'
    | '/craft'
    | '/guestbook'
    | '/tools/gradient-generator'
  id:
    | '__root__'
    | '/'
    | '/blog'
    | '/contact'
    | '/craft'
    | '/guestbook'
    | '/tools/gradient-generator'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  BlogLazyRoute: typeof BlogLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  CraftLazyRoute: typeof CraftLazyRoute
  GuestbookLazyRoute: typeof GuestbookLazyRoute
  ToolsGradientGeneratorLazyRoute: typeof ToolsGradientGeneratorLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  BlogLazyRoute: BlogLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  CraftLazyRoute: CraftLazyRoute,
  GuestbookLazyRoute: GuestbookLazyRoute,
  ToolsGradientGeneratorLazyRoute: ToolsGradientGeneratorLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blog",
        "/contact",
        "/craft",
        "/guestbook",
        "/tools/gradient-generator"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/blog": {
      "filePath": "blog.lazy.tsx"
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/craft": {
      "filePath": "craft.lazy.tsx"
    },
    "/guestbook": {
      "filePath": "guestbook.lazy.tsx"
    },
    "/tools/gradient-generator": {
      "filePath": "tools/gradient-generator.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
